{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\BlogReactNodeTest\\\\client\\\\src\\\\components\\\\EditPost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditPost() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    title: '',\n    body: ''\n  });\n  const [message, setMessage] = useState('');\n  const user = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    fetch(`http://localhost:8000/api/blogs/${id}`).then(res => res.json()).then(data => setForm({\n      title: data.title,\n      body: data.body\n    }));\n  }, [id]);\n  const handleChange = e => setForm({\n    ...form,\n    [e.target.name]: e.target.value\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const res = await fetch(`http://localhost:8000/api/blogs/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      },\n      body: JSON.stringify(form)\n    });\n    if (res.ok) {\n      setMessage('Post updated!');\n      navigate('/');\n    } else {\n      setMessage('Failed to update post');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Blog Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        value: form.title,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 83\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"body\",\n        value: form.body,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 84\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(EditPost, \"4IWpf6iXspsFkJdiD+zNP9j81jo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","EditPost","_s","id","navigate","form","setForm","title","body","message","setMessage","user","JSON","parse","localStorage","getItem","fetch","then","res","json","data","handleChange","e","target","name","value","handleSubmit","preventDefault","method","headers","token","stringify","ok","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","type","_c","$RefreshReg$"],"sources":["E:/School/BlogReactNodeTest/client/src/components/EditPost.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nfunction EditPost() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [form, setForm] = useState({ title: '', body: '' });\r\n  const [message, setMessage] = useState('');\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:8000/api/blogs/${id}`)\r\n      .then(res => res.json())\r\n      .then(data => setForm({ title: data.title, body: data.body }));\r\n  }, [id]);\r\n\r\n  const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const res = await fetch(`http://localhost:8000/api/blogs/${id}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${user.token}` },\r\n      body: JSON.stringify(form)\r\n    });\r\n    if (res.ok) {\r\n      setMessage('Post updated!');\r\n      navigate('/');\r\n    } else {\r\n      setMessage('Failed to update post');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Edit Blog Post</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input name=\"title\" value={form.title} onChange={handleChange} required /><br />\r\n        <textarea name=\"body\" value={form.body} onChange={handleChange} required /><br />\r\n        <button type=\"submit\">Update</button>\r\n      </form>\r\n      <div>{message}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditPost;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAAEW,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EACzD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMe,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAErDpB,SAAS,CAAC,MAAM;IACdqB,KAAK,CAAC,mCAAmCb,EAAE,EAAE,CAAC,CAC3Cc,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAId,OAAO,CAAC;MAAEC,KAAK,EAAEa,IAAI,CAACb,KAAK;MAAEC,IAAI,EAAEY,IAAI,CAACZ;IAAK,CAAC,CAAC,CAAC;EAClE,CAAC,EAAE,CAACL,EAAE,CAAC,CAAC;EAER,MAAMkB,YAAY,GAAGC,CAAC,IAAIhB,OAAO,CAAC;IAAE,GAAGD,IAAI;IAAE,CAACiB,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;EAAM,CAAC,CAAC;EAE/E,MAAMC,YAAY,GAAG,MAAMJ,CAAC,IAAI;IAC9BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,MAAMT,GAAG,GAAG,MAAMF,KAAK,CAAC,mCAAmCb,EAAE,EAAE,EAAE;MAC/DyB,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE,kBAAkB;QAAE,eAAe,EAAE,UAAUlB,IAAI,CAACmB,KAAK;MAAG,CAAC;MACxFtB,IAAI,EAAEI,IAAI,CAACmB,SAAS,CAAC1B,IAAI;IAC3B,CAAC,CAAC;IACF,IAAIa,GAAG,CAACc,EAAE,EAAE;MACVtB,UAAU,CAAC,eAAe,CAAC;MAC3BN,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,MAAM;MACLM,UAAU,CAAC,uBAAuB,CAAC;IACrC;EACF,CAAC;EAED,oBACEV,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAAiC,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBrC,OAAA;MAAMsC,QAAQ,EAAEZ,YAAa;MAAAO,QAAA,gBAC3BjC,OAAA;QAAOwB,IAAI,EAAC,OAAO;QAACC,KAAK,EAAEpB,IAAI,CAACE,KAAM;QAACgC,QAAQ,EAAElB,YAAa;QAACmB,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAAArC,OAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChFrC,OAAA;QAAUwB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEpB,IAAI,CAACG,IAAK;QAAC+B,QAAQ,EAAElB,YAAa;QAACmB,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAAArC,OAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjFrC,OAAA;QAAQyC,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACPrC,OAAA;MAAAiC,QAAA,EAAMxB;IAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV;AAACnC,EAAA,CAzCQD,QAAQ;EAAA,QACAJ,SAAS,EACPC,WAAW;AAAA;AAAA4C,EAAA,GAFrBzC,QAAQ;AA2CjB,eAAeA,QAAQ;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}